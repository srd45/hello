-- Table Creation: PUBLISHER
CREATE TABLE PUBLISHER(
    P_NAME VARCHAR2(25) PRIMARY KEY,
    P_ADDRESS VARCHAR2(10),
    PHONE NUMBER(10)
);

-- Insert Values into PUBLISHER
INSERT INTO PUBLISHER VALUES('PEARSON','BANGALORE','9875462530');
INSERT INTO PUBLISHER VALUES('MCGRAW','NEWDELHI','7845691234');
INSERT INTO PUBLISHER VALUES('SAPNA','BANGALORE','7845963210');

-- Table Creation: BOOK
CREATE TABLE BOOK(
    BOOK_ID INTEGER PRIMARY KEY,
    TITLE VARCHAR2(20),
    P_NAME VARCHAR2(20) REFERENCES PUBLISHER(P_NAME) ON DELETE CASCADE,
    PUB_YEAR NUMBER(4)
);

-- Insert Values into BOOK
INSERT INTO BOOK VALUES (1111,'SE','PEARSON',2005);
INSERT INTO BOOK VALUES (2222,'DBMS','MCGRAW',2004);
INSERT INTO BOOK VALUES (3333,'ANATOMY','PEARSON',2010);
INSERT INTO BOOK VALUES (4444,'ENCYCLOPEDIA','SAPNA',2010);

-- Table Creation: BOOK_AUTHORS
CREATE TABLE BOOK_AUTHOR(
    BOOK_ID INTEGER REFERENCES BOOK(BOOK_ID) ON DELETE CASCADE,
    AUTHOR_NAME VARCHAR(20),
    PRIMARY KEY(BOOK_ID, AUTHOR_NAME)
);

-- Insert Values into BOOK_AUTHORS
INSERT INTO BOOK_AUTHORS VALUES (1111,'SOMMERVILLE');
INSERT INTO BOOK_AUTHORS VALUES (2222,'NAVATHE');
INSERT INTO BOOK_AUTHORS VALUES (3333,'HENRY GRAY');
INSERT INTO BOOK_AUTHORS VALUES (4444,'RAJ KAMAL');

-- Table Creation: LIBRARY_PROGRAM
CREATE TABLE LIBRARY_PROGRAM(
    PROGRAM_ID NUMBER(4) PRIMARY KEY,
    PROGRAM_NAME VARCHAR2(20),
    ADDRESS VARCHAR2(15)
);

-- Insert Values into LIBRARY_PROGRAM
INSERT INTO LIBRARY_PROGRAM VALUES(11,'CENTRAL TECHNICAL','MG ROAD');
INSERT INTO LIBRARY_PROGRAM VALUES(22,'MEDICAL','BH ROAD');
INSERT INTO LIBRARY_PROGRAM VALUES(33,'CHILDREN','SS PURAM');
INSERT INTO LIBRARY_PROGRAM VALUES(44,'SECRETARIAT','SIRAGATE');
INSERT INTO LIBRARY_PROGRAM VALUES(55,'GENERAL','JAYANAGAR');

-- Table Creation: BOOK_COPIES
CREATE TABLE BOOK_COPIES(
    BOOK_ID INTEGER REFERENCES BOOK(BOOK_ID) ON DELETE CASCADE,
    PROGRAM_ID NUMBER(4) REFERENCES LIBRARY_PROGRAM(PROGRAM_ID) ON DELETE CASCADE,
    NO_OF_COPIES INTEGER,
    PRIMARY KEY(BOOK_ID, PROGRAM_ID)
);

-- Insert Values into BOOK_COPIES
INSERT INTO BOOK_COPIES VALUES(1111,11,5);
INSERT INTO BOOK_COPIES VALUES(3333,22,6);
INSERT INTO BOOK_COPIES VALUES(4444,33,10);
INSERT INTO BOOK_COPIES VALUES(2222,11,12);
INSERT INTO BOOK_COPIES VALUES(4444,55,3);

-- Table Creation: BOOK_LENDING
CREATE TABLE BOOK_LENDING(
    BOOK_ID INTEGER REFERENCES BOOK(BOOK_ID) ON DELETE CASCADE,
    PROGRAM_ID INTEGER REFERENCES LIBRARY_PROGRAM(PROGRAM_ID) ON DELETE CASCADE,
    CARD_NO INTEGER REFERENCES CARD(CARD_NO) ON DELETE CASCADE,
    DATE_OUT DATE,
    DUE_DATE DATE,
    PRIMARY KEY(BOOK_ID, PROGRAM_ID, CARD_NO)
);

-- Insert Values into BOOK_LENDING
INSERT INTO BOOK_LENDING VALUES(2222,11,1,'10-JAN-2017','20-AUG-2017');
INSERT INTO BOOK_LENDING VALUES(3333,22,2,'09-JUL-2017','12-AUG-2017');
INSERT INTO BOOK_LENDING VALUES(4444,55,1,'11-APR-2017','09-AUG-2017');
INSERT INTO BOOK_LENDING VALUES(2222,11,5,'09-AUG-2017','19-AUG-2017');
INSERT INTO BOOK_LENDING VALUES(4444,33,1,'10-JUN-2017','15-AUG-2017');
INSERT INTO BOOK_LENDING VALUES(1111,11,1,'12-MAY-2017','10-JUN-2017');
INSERT INTO BOOK_LENDING VALUES(3333,22,1,'10-JUL-2017','15-JUL-2017');




SELECT B.Book_id, B.Title, B.Publisher_Name, BA.Author_Name, BC.No_of_Copies, LP.Programme_Name
FROM BOOK B
JOIN BOOK_AUTHORS BA ON B.Book_id = BA.Book_id
JOIN BOOK_COPIES BC ON B.Book_id = BC.Book_id
JOIN LIBRARY_PROGRAMME LP ON BC.Programme_id = LP.Programme_id;





SELECT BL.Card_No, COUNT(*) AS Books_Borrowed
FROM BOOK_LENDING BL
WHERE BL.Date_Out BETWEEN '2017-01-01' AND '2017-06-30'
GROUP BY BL.Card_No
HAVING COUNT(*) > 3;



-- Assume Book_id = 'xyz' needs to be deleted
DELETE FROM BOOK WHERE Book_id = 'xyz';
DELETE FROM BOOK_AUTHORS WHERE Book_id = 'xyz';
DELETE FROM BOOK_COPIES WHERE Book_id = 'xyz';
DELETE FROM BOOK_LENDING WHERE Book_id = 'xyz';
-- You may also want to consider foreign key constraints for proper database integrity.




-- Create Partition
CREATE TABLE BOOK_BY_YEAR (
    Year INT,
    Book_id INT,
    Title VARCHAR(255),
    Publisher_Name VARCHAR(255),
    PRIMARY KEY (Year, Book_id)
) PARTITION BY RANGE (Year);

-- Add Partitions
ALTER TABLE BOOK_BY_YEAR ADD PARTITION (PARTITION p2010 VALUES LESS THAN (2011));
ALTER TABLE BOOK_BY_YEAR ADD PARTITION (PARTITION p2011 VALUES LESS THAN (2012));
-- Continue adding partitions for each year range

-- Demonstrate with Query
SELECT * FROM BOOK_BY_YEAR PARTITION (p2010);



CREATE VIEW Available_Books AS
SELECT B.Book_id, B.Title, BC.No_of_Copies
FROM BOOK B
JOIN BOOK_COPIES BC ON B.Book_id = BC.Book_id
WHERE BC.No_of_Copies > 0;


