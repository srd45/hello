Table Creation: 

 

ACTOR 

 

CREATE TABLE ACTOR( 

ACT_ID NUMBER(5) CONSTRAINT ACTOR_ACTID_PK PRIMARY KEY, 

ACT_NAME VARCHAR(18) CONSTRAINT ACTOR_ACTNAME_NN NOT NULL, 

ACT_GENDER VARCHAR(2) CONSTRAINT ACTOR_ACTGENDER_NN NOT NULL); 

 

Table created. 

 

DIRECTOR 

 

CREATE TABLE DIRECTOR( 

DIR_ID NUMBER(5) CONSTRAINT DIRECTOR_DIRID_PK PRIMARY KEY, 

DIR_NAME VARCHAR(18) CONSTRAINT DIRECTOR_DIRNAME_NN NOT NULL, 

DIR_PHONE VARCHAR(10) CONSTRAINT DIRECTOR_DIRPHONE_NN NOT NULL); 

 

Table created. 

 

MOVIES 

 

CREATE TABLE MOVIES( 

MOV_ID NUMBER(5) CONSTRAINT MOVIES_MOVID_PK PRIMARY KEY, 

MOV_TITLE VARCHAR(10) CONSTRAINT MOVIES_MOVTITLE_NN NOT NULL, MOV_YEAR NUMBER(5) CONSTRAINT MOVIES_MOVYEAR_NN NOT NULL, 

MOV_LANG VARCHAR(10) CONSTRAINT MOVIES_MOVLANG_NN NOT 

NULL, 

DIR_ID NUMBER(5) CONSTRAINT MOVIES_DIRID_FK REFERENCES DIRECTOR(DIR_ID)); 

 

Table created. 

 

MOVIE_CAST 

 

CREATE TABLE MOVIE_CAST( 

ACT_ID NUMBER(5) CONSTRAINT MOVIECAST_ACTID_FK REFERENCES ACTOR(ACT_ID), 

MOV_ID NUMBER(5) CONSTRAINT MOVIECAST_MOVID_FK REFERENCES 

MOVIES(MOV_ID), ROLE VARCHAR(10), 

CONSTRAINT MOVIECAST_ACTID_MOVID_PK PRIMARY KEY(ACT_ID,MOV_ID)); 

 

Table created. 

 

RATING 

 

CREATE TABLE RATING( 

MOV_ID NUMBER(5) CONSTRAINT RATING_MOVID_FK REFERENCES MOVIES(MOV_ID), 

REV_STARS NUMBER(1) CONSTRAINT RATING_REVSTARS_NN NOT NULL, CONSTRAINT RATING_MOVID_PK PRIMARY KEY(MOV_ID)) 

 

Table created. 

Values for tables: 
 
SQL> INSERT INTO ACTOR VALUES(&ACT_ID,'&ACT_NAME','&ACT_GENDER'); 
 SQL> INSERT INTO DIRECTOR VALUES(&DIR_ID,'&DIR_NAME',&DIR_PHONE); 
SQL> INSERT INTO MOVIES VALUES (&MOV_ID,' &MOV_TITLE', '&MOV_YEAR',     
            ‘&MOV_LANG', &DIR_ID); 
SQL> INSERT INTO MOVIE_CAST VALUES(&ACT_ID,&MOV_ID,'&ROLE'); 
SQL> INSERT INTO RATING VALUES (&MOV_ID, &REV_STARS); 
 


List the titles of all movies directed by ‘Hitchcock’. 
Variant-1 
SELECT MOV_TITLE 
FROM MOVIES M, DIRECTOR D 
WHERE D.DIR_ID=M.DIR_ID AND 
DIR_NAME='HITCHCOCK'; 


2.Find the movie names where one or more actors acted in two or more movies. 

 

VARIANT-1 

SELECT MOV_TITLE 

FROM MOVIES M, MOVIE_CAST MC 

WHERE M.MOV_ID=MC.MOV_ID AND 

MC.ACT_ID IN (SELECT ACT_ID 

FROM MOVIE_CAST GROUP BY ACT_ID 

HAVING COUNT(MOV_ID)>=2); 

 
1. List all actors who acted in a movie before 2000 and also in a movie after 2015 (use JOIN operation). 
 
VARIANT-1 
 
(SELECT ACT_NAME  
FROM ACTOR A JOIN MOVIE_CAST C ON A.ACT_ID=C.ACT_ID 
        JOIN MOVIES M ON C.MOV_ID=M.MOV_ID  
 	WHERE M.MOV_YEAR < 2000) 
 INTERSECT 
(SELECT ACT_NAME  
FROM ACTOR A JOIN MOVIE_CAST C ON A.ACT_ID=C.ACT_ID JOIN 
MOVIES M ON C.MOV_ID=M.MOV_ID 
WHERE M.MOV_YEAR > 2015); 


4. Find the title of movies and number of stars for each movie that has at least one rating and find the highest number of stars that movie received. Sort the result by movie title. 

 

  VARIANT-1 

 

SELECT MOV_TITLE, REV_STARS 

FROM MOVIES M, RATING R 

WHERE M.MOV_ID=R.MOV_ID AND REV_STARS>=1  

ORDER BY MOV_TITLE 


5. Update rating of all movies directed by ‘Steven Spielberg’ to 5. 
 
   VARIANT-1 
 
UPDATE RATING 
SET REV_STARS=5 
WHERE MOV_ID IN (SELECT MOV_ID 
FROM MOVIES M, DIRECTOR D 
WHERE M.DIR_ID=D.DIR_ID AND 
DIR_NAME='STEVEN SPIELBERG'); 



